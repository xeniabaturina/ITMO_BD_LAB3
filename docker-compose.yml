version: '3'

services:
  penguin-classifier:
    build: .
    image: penguin-classifier:latest
    container_name: penguin-classifier
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./results:/app/results
      - ./experiments:/app/experiments
      - ./ansible:/app/ansible
    ports:
      - "5001:5000"
    environment:
      - PYTHONPATH=/app
      - POSTGRES_HOST=postgres
      - VAULT_PASSWORD=${VAULT_PASSWORD}
    depends_on:
      - postgres
    command: python -m src.api

  # Run the secrets-init container first to extract secrets
  secrets-init:
    build: .
    image: penguin-classifier:latest
    container_name: secrets-init
    volumes:
      - ./ansible:/app/ansible
      - ./.env.db:/app/.env.db
    environment:
      - VAULT_PASSWORD=${VAULT_PASSWORD}
    command: >
      bash -c "
        echo \"$VAULT_PASSWORD\" > /tmp/vault_password.txt &&
        export POSTGRES_USER=$(ansible-vault view /app/ansible/secrets.yml --vault-password-file /tmp/vault_password.txt | python3 -c 'import yaml, sys; print(yaml.safe_load(sys.stdin)[\"db_credentials\"][\"postgres_user\"])') &&
        export POSTGRES_PASSWORD=$(ansible-vault view /app/ansible/secrets.yml --vault-password-file /tmp/vault_password.txt | python3 -c 'import yaml, sys; print(yaml.safe_load(sys.stdin)[\"db_credentials\"][\"postgres_password\"])') &&
        export POSTGRES_DB=$(ansible-vault view /app/ansible/secrets.yml --vault-password-file /tmp/vault_password.txt | python3 -c 'import yaml, sys; print(yaml.safe_load(sys.stdin)[\"db_credentials\"][\"postgres_db\"])') &&
        rm /tmp/vault_password.txt &&
        printenv > /app/.env.db
      "

  postgres:
    image: postgres:15
    container_name: penguin-classifier-db
    env_file:
      - ./.env.db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-schemas.sql:/docker-entrypoint-initdb.d/init-schemas.sql
    ports:
      - "5432:5432"
    depends_on:
      - secrets-init

volumes:
  postgres_data:
