version: '3'

services:
  penguin-classifier:
    build: .
    image: penguin-classifier:latest
    container_name: penguin-classifier
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./results:/app/results
      - ./experiments:/app/experiments
      - ./ansible:/app/ansible
    ports:
      - "5001:5000"
    environment:
      - PYTHONPATH=/app
      - POSTGRES_HOST=postgres
      - VAULT_PASSWORD=${VAULT_PASSWORD}
    depends_on:
      - postgres
    command: python -m src.api

  # Run the secrets-init container first to extract secrets
  secrets-init:
    build: .
    image: penguin-classifier:latest
    container_name: secrets-init
    volumes:
      - ./ansible:/app/ansible
      - ./secrets:/secrets
    environment:
      - VAULT_PASSWORD=${VAULT_PASSWORD}
      - SECRETS_DIR=./secrets
    command: >
      bash -c "
        mkdir -p /secrets &&
        echo \"$VAULT_PASSWORD\" > /tmp/vault_password.txt &&
        ansible-vault view /app/ansible/secrets.yml --vault-password-file /tmp/vault_password.txt | 
        python -c 'import yaml, json, sys, os; data = yaml.safe_load(sys.stdin); creds = data[\"db_credentials\"]; os.makedirs(\"/secrets\", exist_ok=True); [open(f\"/secrets/{k}\", \"w\").write(str(v)) for k, v in creds.items()]; print(\"Created secret files\")' &&
        rm /tmp/vault_password.txt
      "

  postgres:
    image: postgres:15
    container_name: penguin-classifier-db
    environment:
      # Use environment variables directly instead of files
      - POSTGRES_USER=${POSTGRES_USER:-penguin_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-penguin_pass}
      - POSTGRES_DB=${POSTGRES_DB:-penguin_classifier}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-schemas.sql:/docker-entrypoint-initdb.d/init-schemas.sql
    ports:
      - "5432:5432"
    depends_on:
      - secrets-init

volumes:
  postgres_data:
